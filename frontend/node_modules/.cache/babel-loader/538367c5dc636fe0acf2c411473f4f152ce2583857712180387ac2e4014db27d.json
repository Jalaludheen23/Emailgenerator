{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\Emailgenerator\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport LoginForm from './components/LoginForm';\nimport OtpVerification from './components/OtpVerification';\nimport Chatbot from './components/Chatbot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\n  const [email, setEmail] = useState('');\n  const [otpSent, setOtpSent] = useState('');\n  const handleLoginSuccess = (email, otp) => {\n    setEmail(email);\n    setOtpSent(otp);\n    Swal.fire({\n      icon: 'success',\n      title: 'Login Successful!',\n      text: 'Please verify the OTP sent to your email.',\n      confirmButtonText: 'OK'\n    });\n  };\n  const handleOtpVerified = () => {\n    setIsOtpVerified(true);\n    Swal.fire({\n      icon: 'success',\n      title: 'OTP Verified!',\n      text: 'Welcome to the chatbot.',\n      confirmButtonText: 'Proceed'\n    });\n  };\n  const showError = message => {\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: message,\n      confirmButtonText: 'Try Again'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"Email Generator App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: !otpSent ? /*#__PURE__*/_jsxDEV(LoginForm, {\n          onLoginSuccess: handleLoginSuccess,\n          showError: showError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/otp\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/otp\",\n        element: !isOtpVerified ? /*#__PURE__*/_jsxDEV(OtpVerification, {\n          email: email,\n          otpSent: otpSent,\n          onOtpVerified: handleOtpVerified,\n          showError: showError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/chatbot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/chatbot\",\n        element: /*#__PURE__*/_jsxDEV(Chatbot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"mufjg+jW4pYDmw6uUQHtF6yUbTk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Routes","Route","Navigate","Swal","LoginForm","OtpVerification","Chatbot","jsxDEV","_jsxDEV","App","_s","isOtpVerified","setIsOtpVerified","email","setEmail","otpSent","setOtpSent","handleLoginSuccess","otp","fire","icon","title","text","confirmButtonText","handleOtpVerified","showError","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onLoginSuccess","to","onOtpVerified","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/Emailgenerator/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport LoginForm from './components/LoginForm';\nimport OtpVerification from './components/OtpVerification';\nimport Chatbot from './components/Chatbot';\n\nconst App = () => {\n  const [isOtpVerified, setIsOtpVerified] = useState(false);\n  const [email, setEmail] = useState('');\n  const [otpSent, setOtpSent] = useState('');\n\n  const handleLoginSuccess = (email, otp) => {\n    setEmail(email);\n    setOtpSent(otp);\n    Swal.fire({\n      icon: 'success',\n      title: 'Login Successful!',\n      text: 'Please verify the OTP sent to your email.',\n      confirmButtonText: 'OK',\n    });\n  };\n\n  const handleOtpVerified = () => {\n    setIsOtpVerified(true);\n    Swal.fire({\n      icon: 'success',\n      title: 'OTP Verified!',\n      text: 'Welcome to the chatbot.',\n      confirmButtonText: 'Proceed',\n    });\n  };\n\n  const showError = (message) => {\n    Swal.fire({\n      icon: 'error',\n      title: 'Error',\n      text: message,\n      confirmButtonText: 'Try Again',\n    });\n  };\n\n  return (\n    <div className=\"container py-5\">\n      <h1 className=\"text-center mb-4\">Email Generator App</h1>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            !otpSent ? (\n              <LoginForm onLoginSuccess={handleLoginSuccess} showError={showError} />\n            ) : (\n              <Navigate to=\"/otp\" />\n            )\n          }\n        />\n        <Route\n          path=\"/otp\"\n          element={\n            !isOtpVerified ? (\n              <OtpVerification\n                email={email}\n                otpSent={otpSent}\n                onOtpVerified={handleOtpVerified}\n                showError={showError}\n              />\n            ) : (\n              <Navigate to=\"/chatbot\" />\n            )\n          }\n        />\n        <Route path=\"/chatbot\" element={<Chatbot />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}