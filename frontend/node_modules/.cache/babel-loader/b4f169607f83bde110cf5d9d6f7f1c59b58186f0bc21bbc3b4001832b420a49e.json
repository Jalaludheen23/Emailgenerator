{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\Emailgenerator\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userMessage, setUserMessage] = useState('');\n  const handleSendMessage = () => {\n    if (userMessage.trim() !== '') {\n      const newMessages = [...messages, {\n        sender: 'user',\n        text: userMessage\n      }];\n      const botResponse = `You said: ${userMessage}`;\n      newMessages.push({\n        sender: 'bot',\n        text: botResponse\n      });\n      setMessages(newMessages);\n      setUserMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatWindow,\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.message,\n          alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start',\n          backgroundColor: msg.sender === 'user' ? '#007bff' : '#e0e0e0',\n          color: msg.sender === 'user' ? '#fff' : '#000'\n        },\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        style: styles.input,\n        placeholder: \"Type your message...\",\n        value: userMessage,\n        onChange: e => setUserMessage(e.target.value),\n        onKeyPress: e => e.key === 'Enter' && handleSendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: styles.sendButton,\n        onClick: handleSendMessage,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"716NyIAy6nXiCVoPtKCIkXYoWPE=\");\n_c = Chatbot;\nconst styles = {\n  container: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100vh',\n    backgroundColor: '#f5f5f5'\n  },\n  chatWindow: {\n    flex: 1,\n    padding: '10px',\n    overflowY: 'auto',\n    display: 'flex',\n    flexDirection: 'column'\n  },\n  message: {\n    padding: '10px 15px',\n    margin: '5px',\n    borderRadius: '15px',\n    maxWidth: '70%',\n    wordWrap: 'break-word'\n  },\n  inputContainer: {\n    display: 'flex',\n    padding: '10px',\n    borderTop: '1px solid #ddd',\n    backgroundColor: '#fff'\n  },\n  input: {\n    flex: 1,\n    padding: '10px',\n    borderRadius: '5px',\n    border: '1px solid #ddd',\n    marginRight: '10px'\n  },\n  sendButton: {\n    padding: '10px 15px',\n    borderRadius: '5px',\n    backgroundColor: '#007bff',\n    color: '#fff',\n    border: 'none',\n    cursor: 'pointer'\n  }\n};\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","userMessage","setUserMessage","handleSendMessage","trim","newMessages","sender","text","botResponse","push","style","styles","container","children","chatWindow","map","msg","index","message","alignSelf","backgroundColor","color","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","type","input","placeholder","value","onChange","e","target","onKeyPress","key","sendButton","onClick","_c","display","flexDirection","height","flex","padding","overflowY","margin","borderRadius","maxWidth","wordWrap","borderTop","border","marginRight","cursor","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/Emailgenerator/frontend/src/components/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [userMessage, setUserMessage] = useState('');\r\n\r\n  const handleSendMessage = () => {\r\n    if (userMessage.trim() !== '') {\r\n      const newMessages = [...messages, { sender: 'user', text: userMessage }];\r\n\r\n      const botResponse = `You said: ${userMessage}`;\r\n      newMessages.push({ sender: 'bot', text: botResponse });\r\n\r\n      setMessages(newMessages);\r\n      setUserMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.chatWindow}>\r\n        {messages.map((msg, index) => (\r\n          <div\r\n            key={index}\r\n            style={{\r\n              ...styles.message,\r\n              alignSelf: msg.sender === 'user' ? 'flex-end' : 'flex-start',\r\n              backgroundColor: msg.sender === 'user' ? '#007bff' : '#e0e0e0',\r\n              color: msg.sender === 'user' ? '#fff' : '#000',\r\n            }}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={styles.inputContainer}>\r\n        <input\r\n          type=\"text\"\r\n          style={styles.input}\r\n          placeholder=\"Type your message...\"\r\n          value={userMessage}\r\n          onChange={(e) => setUserMessage(e.target.value)}\r\n          onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}\r\n        />\r\n        <button style={styles.sendButton} onClick={handleSendMessage}>\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100vh',\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  chatWindow: {\r\n    flex: 1,\r\n    padding: '10px',\r\n    overflowY: 'auto',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  message: {\r\n    padding: '10px 15px',\r\n    margin: '5px',\r\n    borderRadius: '15px',\r\n    maxWidth: '70%',\r\n    wordWrap: 'break-word',\r\n  },\r\n  inputContainer: {\r\n    display: 'flex',\r\n    padding: '10px',\r\n    borderTop: '1px solid #ddd',\r\n    backgroundColor: '#fff',\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: '10px',\r\n    borderRadius: '5px',\r\n    border: '1px solid #ddd',\r\n    marginRight: '10px',\r\n  },\r\n  sendButton: {\r\n    padding: '10px 15px',\r\n    borderRadius: '5px',\r\n    backgroundColor: '#007bff',\r\n    color: '#fff',\r\n    border: 'none',\r\n    cursor: 'pointer',\r\n  },\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}