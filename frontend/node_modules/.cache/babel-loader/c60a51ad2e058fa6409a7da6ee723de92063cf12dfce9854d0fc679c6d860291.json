{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Project\\\\Emailgenerator\\\\frontend\\\\src\\\\components\\\\OtpVerification.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OtpVerification = ({\n  email,\n  otpSent,\n  onOtpVerified,\n  showError\n}) => {\n  _s();\n  const [otp, setOtp] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (otp === otpSent) {\n      onOtpVerified();\n    } else {\n      showError('Invalid OTP. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"card p-4 shadow-sm mx-auto\",\n    style: {\n      maxWidth: '400px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-3 text-center\",\n      children: \"OTP Verification\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-muted text-center\",\n      children: [\"An OTP has been sent to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"otp\",\n        className: \"form-label\",\n        children: \"Enter OTP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"otp\",\n        className: \"form-control\",\n        value: otp,\n        onChange: e => setOtp(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success w-100\",\n      children: \"Verify OTP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(OtpVerification, \"O1Pf3pniv7q+TiCNF92CK/OgmOc=\");\n_c = OtpVerification;\nexport default OtpVerification;\nvar _c;\n$RefreshReg$(_c, \"OtpVerification\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OtpVerification","email","otpSent","onOtpVerified","showError","_s","otp","setOtp","handleSubmit","e","preventDefault","onSubmit","className","style","maxWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Project/Emailgenerator/frontend/src/components/OtpVerification.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst OtpVerification = ({ email, otpSent, onOtpVerified, showError }) => {\r\n  const [otp, setOtp] = useState('');\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (otp === otpSent) {\r\n      onOtpVerified();\r\n    } else {\r\n      showError('Invalid OTP. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"card p-4 shadow-sm mx-auto\" style={{ maxWidth: '400px' }}>\r\n      <h2 className=\"mb-3 text-center\">OTP Verification</h2>\r\n      <p className=\"text-muted text-center\">\r\n        An OTP has been sent to <strong>{email}</strong>\r\n      </p>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"otp\" className=\"form-label\">\r\n          Enter OTP:\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"otp\"\r\n          className=\"form-control\"\r\n          value={otp}\r\n          onChange={(e) => setOtp(e.target.value)}\r\n          required\r\n        />\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-success w-100\">\r\n        Verify OTP\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default OtpVerification;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC,KAAK;EAAEC,OAAO;EAAEC,aAAa;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIJ,GAAG,KAAKJ,OAAO,EAAE;MACnBC,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLC,SAAS,CAAC,gCAAgC,CAAC;IAC7C;EACF,CAAC;EAED,oBACEL,OAAA;IAAMY,QAAQ,EAAEH,YAAa;IAACI,SAAS,EAAC,4BAA4B;IAACC,KAAK,EAAE;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAChGhB,OAAA;MAAIa,SAAS,EAAC,kBAAkB;MAAAG,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtDpB,OAAA;MAAGa,SAAS,EAAC,wBAAwB;MAAAG,QAAA,GAAC,0BACZ,eAAAhB,OAAA;QAAAgB,QAAA,EAASd;MAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACJpB,OAAA;MAAKa,SAAS,EAAC,MAAM;MAAAG,QAAA,gBACnBhB,OAAA;QAAOqB,OAAO,EAAC,KAAK;QAACR,SAAS,EAAC,YAAY;QAAAG,QAAA,EAAC;MAE5C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRpB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,KAAK;QACRV,SAAS,EAAC,cAAc;QACxBW,KAAK,EAAEjB,GAAI;QACXkB,QAAQ,EAAGf,CAAC,IAAKF,MAAM,CAACE,CAAC,CAACgB,MAAM,CAACF,KAAK,CAAE;QACxCG,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNpB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACT,SAAS,EAAC,uBAAuB;MAAAG,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACd,EAAA,CApCIL,eAAe;AAAA2B,EAAA,GAAf3B,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}